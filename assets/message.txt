#include <SPI.h>
#include <LoRa.h>
#include <Arduino.h>
#include <WiFi.h>
#include <Firebase_ESP_Client.h>

// WiFi credentials
#define WIFI_SSID "IdoomFibre_ATJ2Kc64G"
#define WIFI_PASSWORD "X5z5tV4n"

// Firebase credentials
#define API_KEY "AIzaSyByPqqFZT-fsyzsdKYrid0uQf92kswep9I"
#define DATABASE_URL "https://hichampfc-e4e18-default-rtdb.firebaseio.com/"
#define USER_EMAIL "saithichem@gmail.com"
#define USER_PASSWORD "12345678"

// Firebase paths
#define PROCESS_PATH "/project/start_the_process"
#define NTU_PATH "/project/sensor"

FirebaseData fbdo;
FirebaseAuth auth;
FirebaseConfig config;

const int csPin = 5;
const int resetPin = 14;
const int irqPin = 4;
int SyncWord = 0x22;
String value;
String sentStartCommand = "off";

void setup() {
  Serial.begin(115200);
  Serial.println("LoRa Full Duplex");

  // Initialize LoRa module
  LoRa.setPins(csPin, resetPin, irqPin);
  if (!LoRa.begin(433E6)) {
    Serial.println("Starting LoRa failed!");
    while (1);
  }

  // Connect to WiFi
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  while (WiFi.status() != WL_CONNECTED) {
    delay(300);
  }

  // Connect to Firebase
  config.api_key = API_KEY;
  auth.user.email = USER_EMAIL;
  auth.user.password = USER_PASSWORD;
  config.database_url = DATABASE_URL;
  Firebase.reconnectNetwork(true);
  Firebase.begin(&config, &auth);
  LoRa.setSyncWord(SyncWord);  // Sync word must be the same as sender's
}

void loop() {
  for (int i = 0; i <= 1; i++) {
    if (sentStartCommand == "on") {
      
      process();

      sentStartCommand = "off"; // Reset sentStartCommand to "off"
      sendDataToFirebase(sentStartCommand, PROCESS_PATH); // Send "off" to Firebase
      break; // Exit the for loop
    }
    // Check if "start the process" command is received from Firebase
    getdata(PROCESS_PATH); // Read the value of sentStartCommand
    sentStartCommand = value; // Update sentStartCommand with the new value
    Serial.print("read value: ");
    Serial.println(sentStartCommand);
    delay(1000); // Delay to avoid excessive checking
  }
}

void sendDataToFirebase(String data, String path) {
  if (Firebase.RTDB.setString(&fbdo, path, data)) {
    Serial.println("Data sent to Firebase");
  } else {
    Serial.println("Failed to send data to Firebase");
  }
}

void getdata(String path) {
  if (Firebase.RTDB.getString(&fbdo, path)) {
    value = fbdo.stringData();
    Serial.print("Data retrieved from Firebase: ");
    Serial.println(value);
  } else {
    Serial.println("Failed to retrieve data from Firebase");
  }
}

void process() {
  Serial.print("Entered process: ");
   
  // Send "start the process" message
  String sendData = "start the process";
  Serial.print("LoRa beginPacket... ");
  LoRa.beginPacket();
  LoRa.print(sendData);
  LoRa.endPacket();
  Serial.println("Sent start command");

  

  // Check for incoming LoRa packets
  int packetSize = LoRa.parsePacket();
  if (packetSize) {
    String received = "";

    // Read packet data byte by byte
    while (LoRa.available()) {
      char ch = LoRa.read();
      received += ch;
      Serial.print("Received byte: ");
      Serial.println(ch);
    }
    Serial.println("Received packet: ");
    Serial.println(received);
    
    // Send received data to Firebase
    sendDataToFirebase(received, NTU_PATH);
  }
}